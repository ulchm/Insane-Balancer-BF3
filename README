Insane Balancer by Miguel Mendoza (Micovery)

Insane Balancer is in early development. Please download it, and install it manually. 
Report any and all issues you encounter on our github page.  
There is a variable debug_level which you can set to view exactly the logic being used for balancing. 

Installation

Put InsaneBalancer.cs source file in the Plugins/BFBC2 directory.

Description

This is the draft impelementation for a flexible team balancer, which can balance teams by skill, rank, score, kdr and other rules. All of it, while doing best effort to maintain squads together, and clans on the same team. 

Sort Methods

A sort method is a rule used for sorting a list of players or squads. The following balancing methods are supported:

rank_asc_bfbcs, rank_desc_bfbcs    - Sorting based on the soldier career rank 
skill_asc_bfbcs, skill_desc_bfbcs  - Sorting based on the soldier career skill 
kdr_asc_bfbcs, kdr_desc_bfbcs      - Sorting based on the soldier career kill to death ratio 
score_asc_bfbcs, score_desc_bfbcs  - Sorting based on the soldier career score 
kpm_asc_round, kpm_desc_round      - Sorting based on the soldier round kills per minute 
spm_asc_round, spm_desc_round      - Sorting based on the soldier round score per minute
kdr_asc_round , kdr_desc_round     - Sorting based on the soldier round kill to death ratio 
score_asc_round, score_desc_round  - Sorting based on the soldier round score 

All the data for sorting rules ending in _bfbcs is obtained from the BFBC2 Stats websiste (http://www.bfbcs.com) 
All the data for sorting rules ending in _round is obtained from the previous or current round statistics.

Live Balancing Logic
Insane Balancer tries to be as un-intrusive as posible while balancing a game that is in progress. If the teams become un-balanced while the game is in progess it will create two pools of players and sort them (players chosen from the bigger team). One pool for players who are not in any squad, and another pool for squads. First it will chose the player at the top of the no-squad pool and move it to the other team until teams are balanced. If the no-squad pool becomes empty (and teams are still unbalanced) then squad at the top of the squad pool is moved to the other team if the number of players needed is greater than or equal to the size of the squad. If the number of players needed is less than the size of the top squad, a random random player is chosen from the squad and moved to the opposite team until teams are balanced. (players that were on the same squad are kept together)

Round Re-balancing Logic 
If end of round balancing is enabled, Insane Balancer will completely re-sort teams, even if they are already balanced. The logic for the re-sort is as follows. Create two pools of players and sort them (choosing players from all teams). One pool for players who are not in squads, and another for players who are in squads. Then, move all all players and squads to the neutral team, in order to end up with two empty non-neutral teams. Then, pick the squad at the top of the squad pool, and move it to the losing team. Then pick the next squad on top of the squad pool, and move it to the team with the least players, and so on. Once the squad pool is empty, pick the player on top of the no-squad pool, and move it to the team with least players, and so on. If teams are still unbalanced after the no-squad pool is empty, then the live balancing logic is applied. 

Balanced Team Determination 
Teams are determined to be balanced if the difference in number of players between teams is less than or equal to the balance_threshold. The balance_threshold has to be a number greater than 0. If the total number of players in the server is less than or equal to the balance_threshold, then the user set threshold is ignored, and a value of 1 is used instead. Technically, no team should ever be bigger than the other by more than the value of balance_threshold.

Keeping Squads Together
Insane Balancer is coded to keep squads together by default. However, you can set keep_squads to false and both round-balancing and live-balancing logics are changed a bit. What happens, is that all squads in the squad pool are broken, and players put into the no-squad pool, before balancing starts.
Note that for live-balancing, players are not actually moved out of the squad. (it would kill all players if you do that). They are just treated as if they were not in a squad. Also, If keep_squads is enabled, clan-squads will not be broken.

Keeping Clans On Same Team 
During end-of round re-balancing, if keep_clans is enabled, players with the same clan tag are be removed from their current squad, and put into exclusive squads. These special clan squads are given priority over non-clan squads, so that clan-squads end up in the same team. Note that when keep_clans is enabled, teams may end up unbalanced in number, so the live-balancing logic may still need to be applied.
During live-balancing, if keep_clans is enabled, players with clan tags are given priority, as long as there is at least two members of the same clan in the server. When picking players to move to the other team, if a player has a clan tag, the player will be automatically skipped, if the majority of the clan is in the same team (otherwise the player is moved to the other team to join his clan buddies). If at the end of live-balancing phase, teams are still unbalanced, then keep_clans is disabled temporarily, and the live-balancer logic is applied again.

Whitelist (unimplemented) 
Whitelist is a list of players which have even higher priority than clan members. During live balancing, if a player is in the whitelist, he is skipped. If at the end of the live balancing, the teams are still unbalanced, then the whitelist is ignored, and the live balancing logic is re-applied.

Settings 
[*]balance_threshold
(integer > 0) - maximum difference in team sizes before teams are considered unbalanced 
Technically, no team will ever be bigger by more than the balance_threshold

[*]live_interval_time
(integer > 0) - interval number of seconds at which team balance is checked during game 

[*]round_interval
(integer > 0) - interval number number of rounds at which the round balancer is applied 
For example, if map Atacama has 6 rounds, and the value of round_interval is 2, then the round
balancer is run at the end of rounds 2, 4, and 6. 

[*]keep_squads
true - squads are preseved when balancing 
false - squads are intentionally broken up before balancing starts

This setting only applies tot he round-end balancer.

[*]keep_clans
true - players with same clan tags are kept on the same team 
false - clan tags are ignored during balancing

[*]warn_yell
true - yell the auto-balancer warning 
false - do not yell the auto-balancer warning 

[*]warn_say
true - send auto-balancer warning in chat 
false - do not yell the auto-balancer warning in chat 

[*]balance_round
true - enables the end of round balancer
false - disabled the end of round balancer 

[*]balance_live
true - enables the live balancer
false - disables the live balancer 

[*]admin_list
(string) - list of players who are allow to execute admin commands 

[*]round_sort
(string) - method used for sorting players and squads during end of round balancing 

[*]live_sort
(string) - method used for sorting players and squads during live balancing 

[*]advanced_mode
true - enables the advanced settings mode which displays extra undocumented plugin settings
false - disables the advanced settings mode

Advanced Settings

There are settings that are shown by enabling advanced_mode 
[*]warn_msg_interval_time
(integer > 0) - this is the interval time in seconds at which the balance warning will be sent 
The value must be less than or equal to the warn_msg_total_time

[*]warn_msg_total_time
(integer > 0) - this is the total amount of time in seconds, that a warning message will be sent 
Basically this is a grace period for players to fix themselves the teams before the live balancer kicks in.

[*]warn_msg_display_time
(integer >= 0) - this is the amount of time in seconds for how long the balancing warning is displayed. The value must be less than or equal to the warn_msg_total_time

[*]warn_msg_countdown_time
(integer >= 0) - this is the amount of time in seconds for the countdown at the end of the warning period. The value must be less than or equal to the warn_msg_total_time

[*]auto_start
true - enables auto start for live balancing checks
false - disables the live balancer auto start, you will need to issue the !start check command

[*]warn_msg_countdown_time
(integer >= 0 && <= 6) - this variable is for debug mode. When the value is zero, no debug information is printed on the plugin console. For medium debugging information you can set it to 3. The bigger the value, the more debugging details are printed. 

Public In-Game Commands

In-game commands are messages typed into the game chat box, which have special meaning to the plugin. Commands must start with one of the following characters: !,@, or /. This plugin interprets the following commands:
!move
This command can be used by regular players to move themselves to the opposite team as long as teams are balanced. 

Admin In-Game Commands
These are the commands that only soldiers in the ""admin_list"" are allowed to execute. Reply messages generated by admin commands are sent only to the admin who executed the command.

!start check
This command puts the live balancer in started state, so that it periodically (every live_interval_time seconds) checks the teams for balance. When this command is run balance_live is implicitly set to true.

!stop check
This command puts the live balancer in stopped state. When this command is run balance_live is implicitly set to false. 

!show round stats [player-name]
This command is used for showing the player statistics for the current round. The name of the player is optional. If you do not provide a player name, it will print statistics for all players.

!show bfbc stats [player-name]
This command is used for showing the player statistics obtained from the BFBCS website. The name of the player is optional. If you do not provide a player name, it will print statistics for all players. BFBC statistics are only collected if either live_sort, or round_sort use a *_bfbcs sorting method.

!balance
This command forces the live balancing logic to be applied whithout any warning period or countdown. 

1. !set {variable} {to|=} {value}
2. !set {variable} {value} 
3. !set {variable} 

This command is used for setting the value of this plugin's variables.
For the 2nd invocation syntax you cannot use ""="" or ""to"" as the variable value. 
For the 3rd invocation syntax the value is assumed to be ""true"".

!get {variable} 
This command prints the value of the specified variable.